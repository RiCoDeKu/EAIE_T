openapi: 3.0.3

info:
  title: 毎日の絵日記
  description: 画像から絵日記を生成
  version: 1.0.2

servers:
  - url: http://localhost:8000/
    description: Djangoローカル

paths:
  /api/diary/create/:
    post:
      tags: [Diary]
      summary: 画像を受け取り、日記の雛形を生成する
      description: |
        画像を受け取り、DBに保存し、日記の雛形を生成する。
        このエンドポイントから返された日記IDを使用し、
        更新エンドポイント叩くことで、閲覧可能(Public=True)な日記となる．
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/diaryCreateRequest'
      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diaryCreateResponse'
  /api/diary/{id}/:
    put:
      tags: [Diary]
      summary: 日記を更新する
      description: |
        日記を更新するエンドポイント。
        このエンドポイントを叩かれた日記が閲覧可能(Public=True)となる。
      parameters:
        - in: path
          name: id
          required: true
          description: 日記ID
          schema:
            $ref: '#/components/schemas/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/diaryPatchRequest'
      responses:
        '200':
          description: Diary updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diaryPatchResponse'

  /api/diary/:
    get:
      tags: [Diary]
      summary: 日記一覧を取得する
      description: |
        閲覧可能(Public=True)な日記一覧を取得する
      responses:
        '200':
          description: Diary list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/diaryListResponse'
  /api/diary/page_image/:
    get:
      tags: [Diary]
      summary: 日記のページ画像一覧を取得する
      description: |
        閲覧可能(Public=True)な日記に紐づくページ画像の一覧を取得できます。
      responses:
        '200':
          description: Diary page image list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/diaryPageImageListResponse'
    post:
      tags: [Diary]
      summary: 日記のページ画像を登録する
      description: |
        日記のページ画像を作成する
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/diaryPageImageCreateRequest'
      responses:
        '201':
          description: Diary page image uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diaryPageImageCreateResponse'
    put:
      tags: [Diary]
      summary: 日記のページ画像を更新する
      description: |
        日記のページ画像を更新する
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/diaryPageImageCreateRequest'
      responses:
        '200':
          description: Diary page image updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/diaryPageImageCreateResponse'

components:
  schemas:
    created_at:
      type: string
      example: "2024-09-16T10:35:49.716241+09:00"
    enable_ai:
      type: string
      enum: ["true", "false"]
    id:
      type: string
      format: uuid
      example: "123e4567-e89b-12d3-a456-426614174000"
    image:
      type: string
      format: binary
    image_filter:
      type: string
      enum:
        - "blur"
        - "illustration_style"
        - "hue_inversion"
        - "posterization"
        - "original"
    text:
      type: string
      example: "今日の夕暮れ、ふと海辺に立ち寄ると、空と海が美しいパステルカラーに染まっていました..."
    title:
      type: string
      example: "海辺の日記"
    url:
      type: string
      format: uri
      example: "https://example.com/media/uploads/image.jpg"
    weather_prediction:
      type: string
      example: "Sunny"

    diaryCreateRequest:
      type: object
      properties:
        enable_ai:
          $ref: '#/components/schemas/enable_ai'
        image:
          $ref: '#/components/schemas/image'
        image_filter:
          $ref: '#/components/schemas/image_filter'

    diaryCreateResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        title:
          $ref: '#/components/schemas/title'
        image_url:
          $ref: '#/components/schemas/url'
        text:
          $ref: '#/components/schemas/text'
        created_at:
          $ref: '#/components/schemas/created_at'
        weather_prediction:
          $ref: '#/components/schemas/weather_prediction'

    diaryPatchRequest:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/title'
        text:
          $ref: '#/components/schemas/text'
        created_at:
          $ref: '#/components/schemas/created_at'
        image_filter:
          $ref: '#/components/schemas/image_filter'

    diaryPatchResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        title:
          type: string
          example: "海辺の日記"
        image_url:
          $ref: '#/components/schemas/url'
        text:
          type: string
          example: "夕方の海辺で..."
        created_at:
          type: string
          format: date-time
          example: "2024-11-13T17:05:00Z"

    diaryListResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        title:
          $ref: '#/components/schemas/title'
        image_url:
          $ref: '#/components/schemas/url'
        text:
          $ref: '#/components/schemas/text'
        created_at:
          $ref: '#/components/schemas/created_at'

    diaryPageImageCreateRequest:
      type: object
      properties:
        diary_id:
          $ref: '#/components/schemas/id'
        image:
          $ref: '#/components/schemas/image'

    diaryPageImageCreateResponse:
      type: object
      properties:
        diary_id:
          $ref: '#/components/schemas/id'
        image_url:
          $ref: '#/components/schemas/url'

    diaryPageImageListResponse:
      type: object
      properties:
        diary_id:
          $ref: '#/components/schemas/id'
        image_url:
          $ref: '#/components/schemas/url'